parameters:
  init_command_name: 'init'
  data_source_file: 'https://data.binance.vision/data/spot/daily/klines/BTCUSDT/1m/BTCUSDT-1m-2023-01-05.zip'
  data_work_dir: '%empirica.project_dir%/var/binance'
  plot_file: '%empirica.project_dir%/qwe3.png'
  plot_font: '%empirica.project_dir%/vendor/zkrat/draw-ohlc/src/font/Hack-Regular.ttf'

services:
  input:
    class: Symfony\Component\Console\Input\ArgvInput
  output:
    class: Symfony\Component\Console\Output\ConsoleOutput
  EmpiricaPlatform\Terminal\Runner\Application:
    public: true
    calls:
      - [add, ['@init_command']]
      - [setDefaultCommand, ['%init_command_name%', true]]
      - [setDispatcher, ['@event_dispatcher']]
      - [run, ['@input', '@output']]
  # https://symfony.com/doc/current/service_container/configurators.html
  application:
    class: '\EmpiricaPlatform\Terminal\Runner\Application'
    public: true
    calls:
      - [add, ['@init_command']]
      - [setDefaultCommand, ['%init_command_name%', true]]
      - [setDispatcher, ['@event_dispatcher']]
      - [run, ['@input', '@output']]
  init_command:
    class: EmpiricaPlatform\Terminal\Runner\MainCommand
    arguments:  ['%init_command_name%']
    calls:
      - [setDispatcher, ['@event_dispatcher']]
  event_dispatcher:
    class: Symfony\Component\EventDispatcher\EventDispatcher


  data_symbol_base:
    class: EmpiricaPlatform\Terminal\ValueObject\Symbol
    factory: ['EmpiricaPlatform\Terminal\ValueObject\Symbol', 'from']
    arguments: ['BTC']
  data_symbol_quote:
    class: EmpiricaPlatform\Terminal\ValueObject\Symbol
    factory: ['EmpiricaPlatform\Terminal\ValueObject\Symbol', 'from']
    arguments: ['USDT']
  data_symbol_pair:
    class: EmpiricaPlatform\Terminal\ValueObject\SymbolPair
    arguments: ['@data_symbol_base', '@data_symbol_quote']
  data_iterator:
    class: EmpiricaPlatform\PeriodicHistory\OhlcIterator
    arguments: ['@data_symbol_pair']
    #arguments: ['@data_symbol_pair', '%data_source_file%', '%data_work_dir%']
  data:
    class: EmpiricaPlatform\Terminal\Provider
    arguments: ['@event_dispatcher', '@data_iterator', '@output', '%empirica.project_dir%']
    tags:
      - { name: 'kernel.event_listener', method: emitDataEvent, event: 'EmpiricaPlatform\Terminal\Event\InitEvent' }

  plot_list:
    class: EmpiricaPlatform\Plot\HistoryData\OhlcList
    factory: ['EmpiricaPlatform\Plot\HistoryData\OhlcList', 'create']
    arguments: [0]

  plot_canvas:
    class: EmpiricaPlatform\Plot\DrawImage\DrawCanvas
    factory: ['EmpiricaPlatform\Plot\DrawImage\DrawCanvas', 'createCanvas']
    arguments: [1000, 600]
    calls:
      - [setFontPath, ['%plot_font%']]
      - [setFontSize, [10]]
  plot:
    class: EmpiricaPlatform\Terminal\Plot
    arguments: ['@plot_list', '@plot_canvas', '%plot_file%']
    tags:
      - {name: 'kernel.event_listener', method: addOhlc, event: 'EmpiricaPlatform\Terminal\Event\DataEvent'}
      - {name: 'kernel.event_listener', method: renderFile, event: 'EmpiricaPlatform\Terminal\Event\EndEvent'}



